### YamlMime:ManagedReference
items:
- uid: DataLayer.StargazerRepositoryService`1
  commentId: T:DataLayer.StargazerRepositoryService`1
  id: StargazerRepositoryService`1
  parent: DataLayer
  children:
  - DataLayer.StargazerRepositoryService`1.CreateAsync(DataLayer.Interfaces.IStarRepository,DataLayer.Interfaces.IConstellationRepository,DataLayer.Interfaces.IMessierRepository)
  - DataLayer.StargazerRepositoryService`1.UpdateUserPosition(System.Double,System.Double,System.DateTime)
  langs:
  - csharp
  - vb
  name: StargazerRepositoryService<T>
  nameWithType: StargazerRepositoryService<T>
  fullName: DataLayer.StargazerRepositoryService<T>
  type: Class
  source:
    remote:
      path: DataLayer/StargazerRepositoryService.cs
      branch: comment-back-end
      repo: https://github.com/CS-499-Group-9/Stargazer.git
    id: StargazerRepositoryService
    path: ../DataLayer/StargazerRepositoryService.cs
    startLine: 13
  assemblies:
  - DataLayer
  namespace: DataLayer
  summary: Used to make requests to convert data from the equatorial coordinate system to the horizontal coordinate system and receive a data package containing all values.
  example: []
  syntax:
    content: public class StargazerRepositoryService<T>
    typeParameters:
    - id: T
      description: >-
        The class type of the star to be drawn by the front end. 
            This is needed for the internal logic of the <xref href="DataLayer.CelestialDataPackage%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Class StargazerRepositoryService(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: StargazerRepositoryService(Of T)
  fullName.vb: DataLayer.StargazerRepositoryService(Of T)
  name.vb: StargazerRepositoryService(Of T)
- uid: DataLayer.StargazerRepositoryService`1.CreateAsync(DataLayer.Interfaces.IStarRepository,DataLayer.Interfaces.IConstellationRepository,DataLayer.Interfaces.IMessierRepository)
  commentId: M:DataLayer.StargazerRepositoryService`1.CreateAsync(DataLayer.Interfaces.IStarRepository,DataLayer.Interfaces.IConstellationRepository,DataLayer.Interfaces.IMessierRepository)
  id: CreateAsync(DataLayer.Interfaces.IStarRepository,DataLayer.Interfaces.IConstellationRepository,DataLayer.Interfaces.IMessierRepository)
  parent: DataLayer.StargazerRepositoryService`1
  langs:
  - csharp
  - vb
  name: CreateAsync(IStarRepository, IConstellationRepository, IMessierRepository)
  nameWithType: StargazerRepositoryService<T>.CreateAsync(IStarRepository, IConstellationRepository, IMessierRepository)
  fullName: DataLayer.StargazerRepositoryService<T>.CreateAsync(DataLayer.Interfaces.IStarRepository, DataLayer.Interfaces.IConstellationRepository, DataLayer.Interfaces.IMessierRepository)
  type: Method
  source:
    remote:
      path: DataLayer/StargazerRepositoryService.cs
      branch: comment-back-end
      repo: https://github.com/CS-499-Group-9/Stargazer.git
    id: CreateAsync
    path: ../DataLayer/StargazerRepositoryService.cs
    startLine: 51
  assemblies:
  - DataLayer
  namespace: DataLayer
  summary: Asynchronously creates a new instance of <code>StargazerRepositoryService</code>
  example: []
  syntax:
    content: public static Task<StargazerRepositoryService<T>> CreateAsync(IStarRepository starRepository, IConstellationRepository constellationRepository, IMessierRepository messierRepository)
    parameters:
    - id: starRepository
      type: DataLayer.Interfaces.IStarRepository
      description: Used to access a repository of Yale Stars
    - id: constellationRepository
      type: DataLayer.Interfaces.IConstellationRepository
      description: Used to access a repository of constellations identified by the HIP ID
    - id: messierRepository
      type: DataLayer.Interfaces.IMessierRepository
      description: Used to access a repository of Messier Deep Space Objects
    return:
      type: System.Threading.Tasks.Task{DataLayer.StargazerRepositoryService`1}
      description: A new <code>StargazerRepositoryService</code> object.
    content.vb: Public Shared Function CreateAsync(starRepository As IStarRepository, constellationRepository As IConstellationRepository, messierRepository As IMessierRepository) As Task(Of StargazerRepositoryService(Of T))
  overload: DataLayer.StargazerRepositoryService`1.CreateAsync*
  nameWithType.vb: StargazerRepositoryService(Of T).CreateAsync(IStarRepository, IConstellationRepository, IMessierRepository)
  fullName.vb: DataLayer.StargazerRepositoryService(Of T).CreateAsync(DataLayer.Interfaces.IStarRepository, DataLayer.Interfaces.IConstellationRepository, DataLayer.Interfaces.IMessierRepository)
- uid: DataLayer.StargazerRepositoryService`1.UpdateUserPosition(System.Double,System.Double,System.DateTime)
  commentId: M:DataLayer.StargazerRepositoryService`1.UpdateUserPosition(System.Double,System.Double,System.DateTime)
  id: UpdateUserPosition(System.Double,System.Double,System.DateTime)
  parent: DataLayer.StargazerRepositoryService`1
  langs:
  - csharp
  - vb
  name: UpdateUserPosition(double, double, DateTime)
  nameWithType: StargazerRepositoryService<T>.UpdateUserPosition(double, double, DateTime)
  fullName: DataLayer.StargazerRepositoryService<T>.UpdateUserPosition(double, double, System.DateTime)
  type: Method
  source:
    remote:
      path: DataLayer/StargazerRepositoryService.cs
      branch: comment-back-end
      repo: https://github.com/CS-499-Group-9/Stargazer.git
    id: UpdateUserPosition
    path: ../DataLayer/StargazerRepositoryService.cs
    startLine: 131
  assemblies:
  - DataLayer
  namespace: DataLayer
  summary: Makes an async call to convert all data from Equatorial to Horizontal coordinates based on supplied user data.
  example: []
  syntax:
    content: public Task<CelestialDataPackage<T>> UpdateUserPosition(double latitude, double longitude, DateTime localUserTime)
    parameters:
    - id: latitude
      type: System.Double
      description: The latitude of the observer (-90 &lt;= value &lt;= 90)
    - id: longitude
      type: System.Double
      description: The longitude of the observer (-90 &lt;= value &lt;= 90)
    - id: localUserTime
      type: System.DateTime
      description: The observer time in Universal TimeCode <pre><code class="lang-csharp">new DateTime(year, month, day, hour, min, sec).ToUniversalTime()</code></pre>
    return:
      type: System.Threading.Tasks.Task{DataLayer.CelestialDataPackage{{T}}}
      description: A package containing all data required for display. (This call should be made in an <code>async</code> method using the <code>await</code> keyword)
    content.vb: Public Function UpdateUserPosition(latitude As Double, longitude As Double, localUserTime As Date) As Task(Of CelestialDataPackage(Of T))
  overload: DataLayer.StargazerRepositoryService`1.UpdateUserPosition*
  nameWithType.vb: StargazerRepositoryService(Of T).UpdateUserPosition(Double, Double, Date)
  fullName.vb: DataLayer.StargazerRepositoryService(Of T).UpdateUserPosition(Double, Double, Date)
  name.vb: UpdateUserPosition(Double, Double, Date)
references:
- uid: DataLayer.CelestialDataPackage`1
  commentId: T:DataLayer.CelestialDataPackage`1
  href: DataLayer.CelestialDataPackage-1.html
  name: CelestialDataPackage<T>
  nameWithType: CelestialDataPackage<T>
  fullName: DataLayer.CelestialDataPackage<T>
  nameWithType.vb: CelestialDataPackage(Of T)
  fullName.vb: DataLayer.CelestialDataPackage(Of T)
  name.vb: CelestialDataPackage(Of T)
  spec.csharp:
  - uid: DataLayer.CelestialDataPackage`1
    name: CelestialDataPackage
    href: DataLayer.CelestialDataPackage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DataLayer.CelestialDataPackage`1
    name: CelestialDataPackage
    href: DataLayer.CelestialDataPackage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DataLayer
  commentId: N:DataLayer
  href: DataLayer.html
  name: DataLayer
  nameWithType: DataLayer
  fullName: DataLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DataLayer.StargazerRepositoryService`1.CreateAsync*
  commentId: Overload:DataLayer.StargazerRepositoryService`1.CreateAsync
  href: DataLayer.StargazerRepositoryService-1.html#DataLayer_StargazerRepositoryService_1_CreateAsync_DataLayer_Interfaces_IStarRepository_DataLayer_Interfaces_IConstellationRepository_DataLayer_Interfaces_IMessierRepository_
  name: CreateAsync
  nameWithType: StargazerRepositoryService<T>.CreateAsync
  fullName: DataLayer.StargazerRepositoryService<T>.CreateAsync
  nameWithType.vb: StargazerRepositoryService(Of T).CreateAsync
  fullName.vb: DataLayer.StargazerRepositoryService(Of T).CreateAsync
- uid: DataLayer.Interfaces.IStarRepository
  commentId: T:DataLayer.Interfaces.IStarRepository
  parent: DataLayer.Interfaces
  href: DataLayer.Interfaces.IStarRepository.html
  name: IStarRepository
  nameWithType: IStarRepository
  fullName: DataLayer.Interfaces.IStarRepository
- uid: DataLayer.Interfaces.IConstellationRepository
  commentId: T:DataLayer.Interfaces.IConstellationRepository
  parent: DataLayer.Interfaces
  href: DataLayer.Interfaces.IConstellationRepository.html
  name: IConstellationRepository
  nameWithType: IConstellationRepository
  fullName: DataLayer.Interfaces.IConstellationRepository
- uid: DataLayer.Interfaces.IMessierRepository
  commentId: T:DataLayer.Interfaces.IMessierRepository
  parent: DataLayer.Interfaces
  href: DataLayer.Interfaces.IMessierRepository.html
  name: IMessierRepository
  nameWithType: IMessierRepository
  fullName: DataLayer.Interfaces.IMessierRepository
- uid: System.Threading.Tasks.Task{DataLayer.StargazerRepositoryService`1}
  commentId: T:System.Threading.Tasks.Task{DataLayer.StargazerRepositoryService`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<StargazerRepositoryService<T>>
  nameWithType: Task<StargazerRepositoryService<T>>
  fullName: System.Threading.Tasks.Task<DataLayer.StargazerRepositoryService<T>>
  nameWithType.vb: Task(Of StargazerRepositoryService(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of DataLayer.StargazerRepositoryService(Of T))
  name.vb: Task(Of StargazerRepositoryService(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: DataLayer.StargazerRepositoryService`1
    name: StargazerRepositoryService
    href: DataLayer.StargazerRepositoryService-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.StargazerRepositoryService`1
    name: StargazerRepositoryService
    href: DataLayer.StargazerRepositoryService-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: DataLayer.Interfaces
  commentId: N:DataLayer.Interfaces
  href: DataLayer.html
  name: DataLayer.Interfaces
  nameWithType: DataLayer.Interfaces
  fullName: DataLayer.Interfaces
  spec.csharp:
  - uid: DataLayer
    name: DataLayer
    href: DataLayer.html
  - name: .
  - uid: DataLayer.Interfaces
    name: Interfaces
    href: DataLayer.Interfaces.html
  spec.vb:
  - uid: DataLayer
    name: DataLayer
    href: DataLayer.html
  - name: .
  - uid: DataLayer.Interfaces
    name: Interfaces
    href: DataLayer.Interfaces.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: DataLayer.StargazerRepositoryService`1.UpdateUserPosition*
  commentId: Overload:DataLayer.StargazerRepositoryService`1.UpdateUserPosition
  href: DataLayer.StargazerRepositoryService-1.html#DataLayer_StargazerRepositoryService_1_UpdateUserPosition_System_Double_System_Double_System_DateTime_
  name: UpdateUserPosition
  nameWithType: StargazerRepositoryService<T>.UpdateUserPosition
  fullName: DataLayer.StargazerRepositoryService<T>.UpdateUserPosition
  nameWithType.vb: StargazerRepositoryService(Of T).UpdateUserPosition
  fullName.vb: DataLayer.StargazerRepositoryService(Of T).UpdateUserPosition
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Threading.Tasks.Task{DataLayer.CelestialDataPackage{{T}}}
  commentId: T:System.Threading.Tasks.Task{DataLayer.CelestialDataPackage{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CelestialDataPackage<T>>
  nameWithType: Task<CelestialDataPackage<T>>
  fullName: System.Threading.Tasks.Task<DataLayer.CelestialDataPackage<T>>
  nameWithType.vb: Task(Of CelestialDataPackage(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of DataLayer.CelestialDataPackage(Of T))
  name.vb: Task(Of CelestialDataPackage(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: DataLayer.CelestialDataPackage`1
    name: CelestialDataPackage
    href: DataLayer.CelestialDataPackage-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.CelestialDataPackage`1
    name: CelestialDataPackage
    href: DataLayer.CelestialDataPackage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
