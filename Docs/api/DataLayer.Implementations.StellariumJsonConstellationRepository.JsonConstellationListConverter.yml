### YamlMime:ManagedReference
items:
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  commentId: T:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  id: StellariumJsonConstellationRepository.JsonConstellationListConverter
  parent: DataLayer.Implementations
  children:
  - DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(Newtonsoft.Json.Linq.JArray,System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}})
  - DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  - DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: StellariumJsonConstellationRepository.JsonConstellationListConverter
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  type: Class
  source:
    remote:
      path: DataLayer/Implementations/StellariumJsonConstellationRepository.cs
      branch: state-machines
      repo: https://github.com/CS-499-Group-9/Stargazer
    id: JsonConstellationListConverter
    path: ../DataLayer/Implementations/StellariumJsonConstellationRepository.cs
    startLine: 39
  assemblies:
  - DataLayer
  namespace: DataLayer.Implementations
  summary: Custom <xref href="Newtonsoft.Json.JsonConverter%601" data-throw-if-not-resolved="false"></xref> used to build out the <xref href="DataLayer.EquatorialObjects.Constellation" data-throw-if-not-resolved="false"></xref> graph during retrieval from the repository
  example: []
  syntax:
    content: 'private class StellariumJsonConstellationRepository.JsonConstellationListConverter : JsonConverter<IList<Constellation>>'
    content.vb: Private Class StellariumJsonConstellationRepository.JsonConstellationListConverter Inherits JsonConverter(Of IList(Of Constellation))
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  inheritedMembers:
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.CanConvert(System.Type)
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, IList<Constellation>?, bool, JsonSerializer)
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(JsonReader, Type, IList<Constellation>?, bool, JsonSerializer)
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>?, bool, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: DataLayer/Implementations/StellariumJsonConstellationRepository.cs
      branch: state-machines
      repo: https://github.com/CS-499-Group-9/Stargazer
    id: ReadJson
    path: ../DataLayer/Implementations/StellariumJsonConstellationRepository.cs
    startLine: 41
  assemblies:
  - DataLayer
  namespace: DataLayer.Implementations
  summary: Reads the JSON representation of the object.
  example: []
  syntax:
    content: public override IList<Constellation>? ReadJson(JsonReader reader, Type objectType, IList<Constellation>? existingValue, bool hasExistingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The <xref href="Newtonsoft.Json.JsonReader" data-throw-if-not-resolved="false"></xref> to read from.
    - id: objectType
      type: System.Type
      description: Type of the object.
    - id: existingValue
      type: System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}
      description: The existing value of object being read. If there is no existing value then <code>null</code> will be used.
    - id: hasExistingValue
      type: System.Boolean
      description: The existing value has a value.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    return:
      type: System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}
      description: The object value.
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As IList(Of Constellation), hasExistingValue As Boolean, serializer As JsonSerializer) As IList(Of Constellation)
  overridden: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  overload: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson*
  nameWithType.vb: StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(JsonReader, Type, IList(Of Constellation), Boolean, JsonSerializer)
  fullName.vb: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation), Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, IList(Of Constellation), Boolean, JsonSerializer)
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(Newtonsoft.Json.Linq.JArray,System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}})
  commentId: M:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(Newtonsoft.Json.Linq.JArray,System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}})
  id: BuildLines(Newtonsoft.Json.Linq.JArray,System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}})
  parent: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  langs:
  - csharp
  - vb
  name: BuildLines(JArray, IList<Tuple<int, int>>)
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(JArray, IList<Tuple<int, int>>)
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(Newtonsoft.Json.Linq.JArray, System.Collections.Generic.IList<System.Tuple<int, int>>)
  type: Method
  source:
    remote:
      path: DataLayer/Implementations/StellariumJsonConstellationRepository.cs
      branch: state-machines
      repo: https://github.com/CS-499-Group-9/Stargazer
    id: BuildLines
    path: ../DataLayer/Implementations/StellariumJsonConstellationRepository.cs
    startLine: 76
  assemblies:
  - DataLayer
  namespace: DataLayer.Implementations
  summary: Inserts the edges from the <xref href="DataLayer.EquatorialObjects.Constellation" data-throw-if-not-resolved="false"></xref> graph into memory
  example: []
  syntax:
    content: private static IEnumerable<Tuple<int, int>> BuildLines(JArray jArray, IList<Tuple<int, int>> lines)
    parameters:
    - id: jArray
      type: Newtonsoft.Json.Linq.JArray
      description: The array of objects retrieved from the repository (nested)
    - id: lines
      type: System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}}
      description: The table to insert the graph edges
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.Int32,System.Int32}}
      description: A list of all graph edges
    content.vb: Private Shared Function BuildLines(jArray As JArray, lines As IList(Of Tuple(Of Integer, Integer))) As IEnumerable(Of Tuple(Of Integer, Integer))
  overload: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines*
  nameWithType.vb: StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(JArray, IList(Of Tuple(Of Integer, Integer)))
  fullName.vb: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines(Newtonsoft.Json.Linq.JArray, System.Collections.Generic.IList(Of System.Tuple(Of Integer, Integer)))
  name.vb: BuildLines(JArray, IList(Of Tuple(Of Integer, Integer)))
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  commentId: M:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  parent: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, IList<Constellation>?, JsonSerializer)
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(JsonWriter, IList<Constellation>?, JsonSerializer)
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>?, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: DataLayer/Implementations/StellariumJsonConstellationRepository.cs
      branch: state-machines
      repo: https://github.com/CS-499-Group-9/Stargazer
    id: WriteJson
    path: ../DataLayer/Implementations/StellariumJsonConstellationRepository.cs
    startLine: 106
  assemblies:
  - DataLayer
  namespace: DataLayer.Implementations
  summary: Writes the JSON representation of the object.
  example: []
  syntax:
    content: public override void WriteJson(JsonWriter writer, IList<Constellation>? value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The <xref href="Newtonsoft.Json.JsonWriter" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}
      description: The value.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As IList(Of Constellation), serializer As JsonSerializer)
  overridden: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  overload: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson*
  nameWithType.vb: StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(JsonWriter, IList(Of Constellation), JsonSerializer)
  fullName.vb: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation), Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, IList(Of Constellation), JsonSerializer)
references:
- uid: Newtonsoft.Json.JsonConverter`1
  commentId: T:Newtonsoft.Json.JsonConverter`1
  isExternal: true
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: Newtonsoft.Json.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DataLayer.EquatorialObjects.Constellation
  commentId: T:DataLayer.EquatorialObjects.Constellation
  href: DataLayer.EquatorialObjects.Constellation.html
  name: Constellation
  nameWithType: Constellation
  fullName: DataLayer.EquatorialObjects.Constellation
- uid: DataLayer.Implementations
  commentId: N:DataLayer.Implementations
  href: DataLayer.html
  name: DataLayer.Implementations
  nameWithType: DataLayer.Implementations
  fullName: DataLayer.Implementations
  spec.csharp:
  - uid: DataLayer
    name: DataLayer
    href: DataLayer.html
  - name: .
  - uid: DataLayer.Implementations
    name: Implementations
    href: DataLayer.Implementations.html
  spec.vb:
  - uid: DataLayer
    name: DataLayer
    href: DataLayer.html
  - name: .
  - uid: DataLayer.Implementations
    name: Implementations
    href: DataLayer.Implementations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  commentId: T:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  parent: Newtonsoft.Json
  definition: Newtonsoft.Json.JsonConverter`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: JsonConverter<IList<Constellation>>
  nameWithType: JsonConverter<IList<Constellation>>
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>
  nameWithType.vb: JsonConverter(Of IList(Of Constellation))
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation))
  name.vb: JsonConverter(Of IList(Of Constellation))
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: )
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  definition: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<IList<Constellation>>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of IList(Of Constellation)).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  definition: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<IList<Constellation>>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of IList(Of Constellation)).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  definition: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<IList<Constellation>>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of IList(Of Constellation)).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  definition: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, IList<Constellation>, bool, JsonSerializer)
  nameWithType: JsonConverter<IList<Constellation>>.ReadJson(JsonReader, Type, IList<Constellation>, bool, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of IList(Of Constellation)).ReadJson(JsonReader, Type, IList(Of Constellation), Boolean, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)).ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation), Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, IList(Of Constellation), Boolean, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson*
  commentId: Overload:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson
  href: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.html#DataLayer_Implementations_StellariumJsonConstellationRepository_JsonConstellationListConverter_ReadJson_Newtonsoft_Json_JsonReader_System_Type_System_Collections_Generic_IList_DataLayer_EquatorialObjects_Constellation__System_Boolean_Newtonsoft_Json_JsonSerializer_
  name: ReadJson
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.ReadJson
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}
  commentId: T:System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Constellation>
  nameWithType: IList<Constellation>
  fullName: System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>
  nameWithType.vb: IList(Of Constellation)
  fullName.vb: System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)
  name.vb: IList(Of Constellation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines*
  commentId: Overload:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines
  href: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.html#DataLayer_Implementations_StellariumJsonConstellationRepository_JsonConstellationListConverter_BuildLines_Newtonsoft_Json_Linq_JArray_System_Collections_Generic_IList_System_Tuple_System_Int32_System_Int32___
  name: BuildLines
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.BuildLines
- uid: Newtonsoft.Json.Linq.JArray
  commentId: T:Newtonsoft.Json.Linq.JArray
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: Newtonsoft.Json.Linq.JArray
- uid: System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.IList{System.Tuple{System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Tuple<int, int>>
  nameWithType: IList<Tuple<int, int>>
  fullName: System.Collections.Generic.IList<System.Tuple<int, int>>
  nameWithType.vb: IList(Of Tuple(Of Integer, Integer))
  fullName.vb: System.Collections.Generic.IList(Of System.Tuple(Of Integer, Integer))
  name.vb: IList(Of Tuple(Of Integer, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Tuple{System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Tuple<int, int>>
  nameWithType: IEnumerable<Tuple<int, int>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<int, int>>
  nameWithType.vb: IEnumerable(Of Tuple(Of Integer, Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Tuple(Of Integer, Integer))
  name.vb: IEnumerable(Of Tuple(Of Integer, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json.Linq
    name: Linq
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json.Linq
    name: Linq
    isExternal: true
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}
  definition: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: WriteJson(JsonWriter, IList<Constellation>, JsonSerializer)
  nameWithType: JsonConverter<IList<Constellation>>.WriteJson(JsonWriter, IList<Constellation>, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>>.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.IList<DataLayer.EquatorialObjects.Constellation>, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of IList(Of Constellation)).WriteJson(JsonWriter, IList(Of Constellation), JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation)).WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.IList(Of DataLayer.EquatorialObjects.Constellation), Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, IList(Of Constellation), JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IList{DataLayer.EquatorialObjects.Constellation},Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: DataLayer.EquatorialObjects.Constellation
    name: Constellation
    href: DataLayer.EquatorialObjects.Constellation.html
  - name: )
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson*
  commentId: Overload:DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson
  href: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.html#DataLayer_Implementations_StellariumJsonConstellationRepository_JsonConstellationListConverter_WriteJson_Newtonsoft_Json_JsonWriter_System_Collections_Generic_IList_DataLayer_EquatorialObjects_Constellation__Newtonsoft_Json_JsonSerializer_
  name: WriteJson
  nameWithType: StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson
  fullName: DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.WriteJson
- uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: WriteJson(JsonWriter, T, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, T, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, T, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
