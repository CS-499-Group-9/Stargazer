{
  "api/DataLayer.CelestialDataPackage-1.html": {
    "href": "api/DataLayer.CelestialDataPackage-1.html",
    "title": "Class CelestialDataPackage<T> | Stargazer Data API",
    "summary": "Class CelestialDataPackage<T> Namespace DataLayer Assembly DataLayer.dll Encapsulates all data returned in the Horizontal Coordinate system from the DataLayer needed by the front end to display astronomical objects. public class CelestialDataPackage<T> Type Parameters T The class type of star that is used in the database Inheritance object CelestialDataPackage<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CelestialDataPackage(BlockingCollection<HorizontalStar>, BlockingCollection<HorizontalMessierObject>, IEnumerable<Constellation>, ConcurrentDictionary<int, HorizontalStar>, ConcurrentDictionary<int, T>) Used by the StargazerRepositoryService<T> to pack up the data and return it internal CelestialDataPackage(BlockingCollection<HorizontalStar> stars, BlockingCollection<HorizontalMessierObject> messierObjects, IEnumerable<Constellation> constellations, ConcurrentDictionary<int, HorizontalStar> constellationStars, ConcurrentDictionary<int, T> drawnStars) Parameters stars BlockingCollection<HorizontalStar> messierObjects BlockingCollection<HorizontalMessierObject> constellations IEnumerable<Constellation> constellationStars ConcurrentDictionary<int, HorizontalStar> drawnStars ConcurrentDictionary<int, T> Properties ConstellationStars private ConcurrentDictionary<int, HorizontalStar> ConstellationStars { get; } Property Value ConcurrentDictionary<int, HorizontalStar> Constellations A collection of Constellations to be displayed. public IEnumerable<Constellation> Constellations { get; } Property Value IEnumerable<Constellation> DrawnStars private ConcurrentDictionary<int, T> DrawnStars { get; } Property Value ConcurrentDictionary<int, T> MessierObjects A collection of Messier Deep Space Objects in the Horizontal Coordinate form to be displayed. while(!MessierObjects.IsCompleted) { foreach(var star in MessierObjects.GetConsumingEnumerable() { //Convert and display } } public BlockingCollection<HorizontalMessierObject> MessierObjects { get; } Property Value BlockingCollection<HorizontalMessierObject> Stars A collection of stars in the Horizontal Coordinate form to be displayed. while(!Stars.IsCompleted) { foreach(var star in Stars.GetConsumingEnumerable() { //Convert and display } } public BlockingCollection<HorizontalStar> Stars { get; } Property Value BlockingCollection<HorizontalStar> Methods GetConstellationStar(int, Func<HorizontalStar, T>) Searches the dictionary for a HorizontalStar using the Hip ID provided. If found, converts it to a T star, stores it and returns it. If not found, retrieves it from the dictionary of stars already converted and returns it. public T GetConstellationStar(int hipId, Func<HorizontalStar, T> SpawnStar) Parameters hipId int The Hipparcos Id of the star SpawnStar Func<HorizontalStar, T> The function provided to spawn a new star in the graphic scene. Must take a HorizontalStar as and argument and return a T star Returns T Exceptions KeyNotFoundException"
  },
  "api/DataLayer.EquatorialObjects.Constellation.html": {
    "href": "api/DataLayer.EquatorialObjects.Constellation.html",
    "title": "Class Constellation | Stargazer Data API",
    "summary": "Class Constellation Namespace DataLayer.EquatorialObjects Assembly DataLayer.dll Represents a constellation in the sky public class Constellation Inheritance object Constellation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Constellation(string, string, string?) Returns a new object public Constellation(string Id, string name, string? nativeName) Parameters Id string The unique name of the constellation name string The English name of the constellation nativeName string The native name of the constellation Properties ConstellationId The id of the constellation public string? ConstellationId { get; internal set; } Property Value string ConstellationLines A list of vertices representing edges in the graph (each vertex is the HipparcosId of a star) public IEnumerable<Tuple<int, int>> ConstellationLines { get; internal set; } Property Value IEnumerable<Tuple<int, int>> ConstellationName The English(native) name of the constellation public string? ConstellationName { get; internal set; } Property Value string"
  },
  "api/DataLayer.EquatorialObjects.EquatorialCelestialBody.html": {
    "href": "api/DataLayer.EquatorialObjects.EquatorialCelestialBody.html",
    "title": "Class EquatorialCelestialBody | Stargazer Data API",
    "summary": "Class EquatorialCelestialBody Namespace DataLayer.EquatorialObjects Assembly DataLayer.dll Represents an object that can be located in the sky according to equatorial coordinates. public abstract class EquatorialCelestialBody Inheritance object EquatorialCelestialBody Derived EquatorialMessierObject EquatorialStar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Declination A measure in degrees how far an object is north or south of the celestial equator during the spring equinox of 2000 public double Declination { get; set; } Property Value double Distance Distance in light years from the earth. public double Distance { get; set; } Property Value double Magnitude A logarithmic representation of a star's brightness (negative values being brighter) public double Magnitude { get; set; } Property Value double RightAscension Measured in decimal hours from the point in the sky where the sun crosses the celestial equator during the spring equinox of 2000 public double RightAscension { get; set; } Property Value double"
  },
  "api/DataLayer.EquatorialObjects.EquatorialMessierObject.html": {
    "href": "api/DataLayer.EquatorialObjects.EquatorialMessierObject.html",
    "title": "Class EquatorialMessierObject | Stargazer Data API",
    "summary": "Class EquatorialMessierObject Namespace DataLayer.EquatorialObjects Assembly DataLayer.dll Represents a Messier Deep Space Object located in equatorial coordinates public class EquatorialMessierObject : EquatorialCelestialBody Inheritance object EquatorialCelestialBody EquatorialMessierObject Inherited Members EquatorialCelestialBody.RightAscension EquatorialCelestialBody.Declination EquatorialCelestialBody.Magnitude EquatorialCelestialBody.Distance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Constellation The constellation containing the object public string? Constellation { get; set; } Property Value string MessierId The 'M' prefixed identification number of the object public string? MessierId { get; set; } Property Value string NewGeneralCatalog The Messier Object identification in the New General Catalog public string? NewGeneralCatalog { get; set; } Property Value string Size The size (in light years) of the object (a 2 dimensional value as viewed) public string? Size { get; set; } Property Value string Type The Messier Object category public string? Type { get; set; } Property Value string ViewingDifficulty The difficulty level of viewing the object public string? ViewingDifficulty { get; set; } Property Value string ViewingSeason The celestial season in which the object can be viewed public string? ViewingSeason { get; set; } Property Value string"
  },
  "api/DataLayer.EquatorialObjects.EquatorialStar.html": {
    "href": "api/DataLayer.EquatorialObjects.EquatorialStar.html",
    "title": "Class EquatorialStar | Stargazer Data API",
    "summary": "Class EquatorialStar Namespace DataLayer.EquatorialObjects Assembly DataLayer.dll Represents a visible star in equatorial coordinates public class EquatorialStar : EquatorialCelestialBody Inheritance object EquatorialCelestialBody EquatorialStar Inherited Members EquatorialCelestialBody.RightAscension EquatorialCelestialBody.Declination EquatorialCelestialBody.Magnitude EquatorialCelestialBody.Distance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AbsoluteMagnitude The actual brightness of the star public double AbsoluteMagnitude { get; set; } Property Value double BayerFlamsteedDesignation A combination of two star-naming systems - Bayer (Greek letter) and Flamsteed (number) public string? BayerFlamsteedDesignation { get; set; } Property Value string ColorIndex Describes the color of a star based on its brightness according to Blue and Visual Green filters. public double? ColorIndex { get; set; } Property Value double? GlieseId Unique ID in the Gleise catalog public string? GlieseId { get; set; } Property Value string HarvardRevisedId The unique ID in the Harvard Revised catalog public int? HarvardRevisedId { get; set; } Property Value int? HenryDraperId The unique ID in the Henry Draper catalog public int? HenryDraperId { get; set; } Property Value int? HipparcosId The unique ID in the Hipparcos catalog public int? HipparcosId { get; set; } Property Value int? ProperName The international Astronomical Union (IAU) or traditional historical name of the star public string? ProperName { get; set; } Property Value string Spectrum A value defined by the Harvard classification to categorize stars according to color, tempurature and spectral lines public string? Spectrum { get; set; } Property Value string StarId The unique ID in the Yale Star catalog public int StarId { get; set; } Property Value int"
  },
  "api/DataLayer.EquatorialObjects.html": {
    "href": "api/DataLayer.EquatorialObjects.html",
    "title": "Namespace DataLayer.EquatorialObjects | Stargazer Data API",
    "summary": "Namespace DataLayer.EquatorialObjects Classes Constellation Represents a constellation in the sky EquatorialCelestialBody Represents an object that can be located in the sky according to equatorial coordinates. EquatorialMessierObject Represents a Messier Deep Space Object located in equatorial coordinates EquatorialStar Represents a visible star in equatorial coordinates"
  },
  "api/DataLayer.HorizontalObjects.HorizontalBody.html": {
    "href": "api/DataLayer.HorizontalObjects.HorizontalBody.html",
    "title": "Class HorizontalBody | Stargazer Data API",
    "summary": "Class HorizontalBody Namespace DataLayer.HorizontalObjects Assembly DataLayer.dll Represents an object that can be located in the sky according to horizontal coordinates. public abstract class HorizontalBody Inheritance object HorizontalBody Derived HorizontalMessierObject HorizontalStar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Altitude The angle in decimal degrees formed between the horizon and the star public double Altitude { get; internal set; } Property Value double Azimuth The angle in decimal degrees formed between due north and the star public double Azimuth { get; internal set; } Property Value double Distance The distance (in lightyears) from the star to earth public double Distance { get; internal set; } Property Value double Magnitude The apparent brightness of the star public double Magnitude { get; internal set; } Property Value double"
  },
  "api/DataLayer.HorizontalObjects.HorizontalMessierObject.html": {
    "href": "api/DataLayer.HorizontalObjects.HorizontalMessierObject.html",
    "title": "Class HorizontalMessierObject | Stargazer Data API",
    "summary": "Class HorizontalMessierObject Namespace DataLayer.HorizontalObjects Assembly DataLayer.dll A Messier Deep Space Object located in Horizontal coordinates public class HorizontalMessierObject : HorizontalBody Inheritance object HorizontalBody HorizontalMessierObject Inherited Members HorizontalBody.Altitude HorizontalBody.Azimuth HorizontalBody.Magnitude HorizontalBody.Distance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Constellation Constellation public string? Constellation { get; internal set; } Property Value string MessierId MessierId public string? MessierId { get; internal set; } Property Value string NewGeneralCatalog NewGeneralCatalog public string? NewGeneralCatalog { get; internal set; } Property Value string Size Size public string? Size { get; internal set; } Property Value string Type Type public string? Type { get; internal set; } Property Value string ViewingDifficulty ViewingDifficulty public string? ViewingDifficulty { get; internal set; } Property Value string ViewingSeason ViewingSeason public string? ViewingSeason { get; internal set; } Property Value string"
  },
  "api/DataLayer.HorizontalObjects.HorizontalStar.html": {
    "href": "api/DataLayer.HorizontalObjects.HorizontalStar.html",
    "title": "Class HorizontalStar | Stargazer Data API",
    "summary": "Class HorizontalStar Namespace DataLayer.HorizontalObjects Assembly DataLayer.dll A star located by the Horizontal Coordinate method public class HorizontalStar : HorizontalBody Inheritance object HorizontalBody HorizontalStar Inherited Members HorizontalBody.Altitude HorizontalBody.Azimuth HorizontalBody.Magnitude HorizontalBody.Distance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AbsoluteMagnitude AbsoluteMagnitude public double? AbsoluteMagnitude { get; internal set; } Property Value double? ColorIndex ColorIndex public double? ColorIndex { get; internal set; } Property Value double? HipparcosId HipparcosId public int? HipparcosId { get; internal set; } Property Value int? Spectrum Spectrum public string? Spectrum { get; internal set; } Property Value string StarId StarId public int StarId { get; internal set; } Property Value int StarName ProperName public string? StarName { get; internal set; } Property Value string"
  },
  "api/DataLayer.HorizontalObjects.html": {
    "href": "api/DataLayer.HorizontalObjects.html",
    "title": "Namespace DataLayer.HorizontalObjects | Stargazer Data API",
    "summary": "Namespace DataLayer.HorizontalObjects Classes HorizontalBody Represents an object that can be located in the sky according to horizontal coordinates. HorizontalMessierObject A Messier Deep Space Object located in Horizontal coordinates HorizontalStar A star located by the Horizontal Coordinate method"
  },
  "api/DataLayer.Implementations.CosineKittyEquatorialConverter-1.html": {
    "href": "api/DataLayer.Implementations.CosineKittyEquatorialConverter-1.html",
    "title": "Class CosineKittyEquatorialConverter<T> | Stargazer Data API",
    "summary": "Class CosineKittyEquatorialConverter<T> Namespace DataLayer.Implementations Assembly DataLayer.dll Converts an object of type EquatorialCelestialBody from the equatorial coordinate system to horizontal coordinates using the CosineKitty.AstronomyEngine library internal class CosineKittyEquatorialConverter<T> : IEquatorialConverter<T> where T : HorizontalBody, new() Type Parameters T The type of HorizontalBody to convert to Inheritance object CosineKittyEquatorialConverter<T> Implements IEquatorialConverter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CosineKittyEquatorialConverter(double, double, DateTime) Generates a new converter specific to the observers location and time internal CosineKittyEquatorialConverter(double latitude, double longitude, DateTime universalTime) Parameters latitude double The latitude of the observer longitude double The longitude of the observer universalTime DateTime The Universal Coordinated Time Fields astroTime private readonly AstroTime astroTime Field Value AstroTime observer private readonly Observer observer Field Value Observer Properties Convert Performs the conversion and returns the T object of type HorizontalBody public Func<EquatorialCelestialBody, T> Convert { get; } Property Value Func<EquatorialCelestialBody, T>"
  },
  "api/DataLayer.Implementations.HygCsvStarRepository.StarMap.ParsecToLightyearConverter.html": {
    "href": "api/DataLayer.Implementations.HygCsvStarRepository.StarMap.ParsecToLightyearConverter.html",
    "title": "Class HygCsvStarRepository.StarMap.ParsecToLightyearConverter | Stargazer Data API",
    "summary": "Class HygCsvStarRepository.StarMap.ParsecToLightyearConverter Namespace DataLayer.Implementations Assembly DataLayer.dll A custom type converter to convert parsecs to light years (the distance data in the repository is in Parsecs... yes... that's actually a real thing). private class HygCsvStarRepository.StarMap.ParsecToLightyearConverter : DefaultTypeConverter, ITypeConverter Inheritance object DefaultTypeConverter HygCsvStarRepository.StarMap.ParsecToLightyearConverter Implements ITypeConverter Inherited Members DefaultTypeConverter.ConvertToString(object, IWriterRow, MemberMapData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields conversionFactor private const double conversionFactor = 3.262 Field Value double Methods ConvertFromString(string?, IReaderRow, MemberMapData) Converts the string to an object. public override object? ConvertFromString(string? text, IReaderRow row, MemberMapData memberMapData) Parameters text string The string to convert to an object. row IReaderRow The CsvHelper.IReaderRow for the current record. memberMapData MemberMapData The CsvHelper.Configuration.MemberMapData for the member being created. Returns object The object created from the string."
  },
  "api/DataLayer.Implementations.HygCsvStarRepository.StarMap.html": {
    "href": "api/DataLayer.Implementations.HygCsvStarRepository.StarMap.html",
    "title": "Class HygCsvStarRepository.StarMap | Stargazer Data API",
    "summary": "Class HygCsvStarRepository.StarMap Namespace DataLayer.Implementations Assembly DataLayer.dll A custom class (internal to the HygStarRepository) to map the columns in the repository to the POCO private class HygCsvStarRepository.StarMap : ClassMap<EquatorialStar> Inheritance object ClassMap ClassMap<EquatorialStar> HygCsvStarRepository.StarMap Inherited Members ClassMap<EquatorialStar>.Map<TMember>(Expression<Func<EquatorialStar, TMember>>, bool) ClassMap<EquatorialStar>.Map<T>(Expression<Func<T, object>>, bool) ClassMap<EquatorialStar>.References<TClassMap>(Expression<Func<EquatorialStar, object>>, params object[]) ClassMap.Map(Type, MemberInfo, bool) ClassMap.Map() ClassMap.References(Type, MemberInfo, params object[]) ClassMap.Parameter(string) ClassMap.Parameter(Func<ConstructorInfo>, string) ClassMap.Parameter(ConstructorInfo, ParameterInfo) ClassMap.AutoMap(CultureInfo) ClassMap.AutoMap(CsvConfiguration) ClassMap.AutoMap(CsvContext) ClassMap.GetMaxIndex(bool) ClassMap.ReIndex(int) ClassMap.AutoMapMembers(ClassMap, CsvContext, LinkedList<Type>, int) ClassMap.AutoMapConstructorParameters(ClassMap, CsvContext, LinkedList<Type>, int) ClassMap.CheckForCircularReference(Type, LinkedList<Type>) ClassMap.GetGenericType() ClassMap.ApplyAttributes(ParameterMap) ClassMap.ApplyAttributes(ParameterReferenceMap) ClassMap.ApplyAttributes(MemberMap) ClassMap.ApplyAttributes(MemberReferenceMap) ClassMap.ClassType ClassMap.ParameterMaps ClassMap.MemberMaps ClassMap.ReferenceMaps object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StarMap() Creates an instance of the mapper public StarMap()"
  },
  "api/DataLayer.Implementations.HygCsvStarRepository.html": {
    "href": "api/DataLayer.Implementations.HygCsvStarRepository.html",
    "title": "Class HygCsvStarRepository | Stargazer Data API",
    "summary": "Class HygCsvStarRepository Namespace DataLayer.Implementations Assembly DataLayer.dll Retrieves raw star data from the HYG.csv repository internal class HygCsvStarRepository : IStarRepository Inheritance object HygCsvStarRepository Implements IStarRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HygCsvStarRepository(string) Creates a new instance and sets the file path public HygCsvStarRepository(string repositoryPath) Parameters repositoryPath string The path to the directory containing the file Fields filePath The file path to the repository csv file private readonly string filePath Field Value string Methods GetStarByHipAsync(int) Retrieves a single star from the repository public Task<EquatorialStar?> GetStarByHipAsync(int hipparcosId) Parameters hipparcosId int The Hipparcos ID of the star to find Returns Task<EquatorialStar> Null if the star is not found, otherwise returns the star in the equatorial coordinate form. Explicit Interface Implementations IStarRepository.GetAllStarsAsync(double) Gets all stars that are brighter than a defined brightness. Task<IList<EquatorialStar>> IStarRepository.GetAllStarsAsync(double maximumMagnitude) Parameters maximumMagnitude double The minimum brightness of the stars to include. Returns Task<IList<EquatorialStar>> A list of stars in the equatorial coordinate form."
  },
  "api/DataLayer.Implementations.NullableDoubleConverter.html": {
    "href": "api/DataLayer.Implementations.NullableDoubleConverter.html",
    "title": "Class NullableDoubleConverter | Stargazer Data API",
    "summary": "Class NullableDoubleConverter Namespace DataLayer.Implementations Assembly DataLayer.dll A custom type converter to handle blank space in the csv file internal class NullableDoubleConverter : DefaultTypeConverter, ITypeConverter Inheritance object DefaultTypeConverter NullableDoubleConverter Implements ITypeConverter Inherited Members DefaultTypeConverter.ConvertToString(object, IWriterRow, MemberMapData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFromString(string?, IReaderRow, MemberMapData) Converts the string to an object. public override object? ConvertFromString(string? text, IReaderRow row, MemberMapData memberMapData) Parameters text string The string to convert to an object. row IReaderRow The CsvHelper.IReaderRow for the current record. memberMapData MemberMapData The CsvHelper.Configuration.MemberMapData for the member being created. Returns object The object created from the string."
  },
  "api/DataLayer.Implementations.NullableIntConverter.html": {
    "href": "api/DataLayer.Implementations.NullableIntConverter.html",
    "title": "Class NullableIntConverter | Stargazer Data API",
    "summary": "Class NullableIntConverter Namespace DataLayer.Implementations Assembly DataLayer.dll A custom type converter to handle blank space in the repository internal class NullableIntConverter : DefaultTypeConverter, ITypeConverter Inheritance object DefaultTypeConverter NullableIntConverter Implements ITypeConverter Inherited Members DefaultTypeConverter.ConvertToString(object, IWriterRow, MemberMapData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFromString(string?, IReaderRow, MemberMapData) Converts the string to an object. public override object? ConvertFromString(string? text, IReaderRow row, MemberMapData memberMapData) Parameters text string The string to convert to an object. row IReaderRow The CsvHelper.IReaderRow for the current record. memberMapData MemberMapData The CsvHelper.Configuration.MemberMapData for the member being created. Returns object The object created from the string."
  },
  "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter.html": {
    "href": "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter.html",
    "title": "Class StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter | Stargazer Data API",
    "summary": "Class StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter Namespace DataLayer.Implementations Assembly DataLayer.dll A type converter internal to the StarLustMessierCsvRepository class used to convert the Declination from degrees and minutes to decimal degrees. private class StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter : DefaultTypeConverter, ITypeConverter Inheritance object DefaultTypeConverter StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter Implements ITypeConverter Inherited Members DefaultTypeConverter.ConvertToString(object, IWriterRow, MemberMapData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFromString(string?, IReaderRow, MemberMapData) Converts the string to an object. public override object? ConvertFromString(string? text, IReaderRow row, MemberMapData memberMapData) Parameters text string The string to convert to an object. row IReaderRow The CsvHelper.IReaderRow for the current record. memberMapData MemberMapData The CsvHelper.Configuration.MemberMapData for the member being created. Returns object The object created from the string."
  },
  "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter.html": {
    "href": "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter.html",
    "title": "Class StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter | Stargazer Data API",
    "summary": "Class StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter Namespace DataLayer.Implementations Assembly DataLayer.dll A type converter internal to the StarLustMessierCsvRepository class used to convert the Right Ascension from hours and decimal minutes to decimal hours. private class StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter : DefaultTypeConverter, ITypeConverter Inheritance object DefaultTypeConverter StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter Implements ITypeConverter Inherited Members DefaultTypeConverter.ConvertToString(object, IWriterRow, MemberMapData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFromString(string?, IReaderRow, MemberMapData) Converts the string to an object. public override object? ConvertFromString(string? text, IReaderRow row, MemberMapData memberMapData) Parameters text string The string to convert to an object. row IReaderRow The CsvHelper.IReaderRow for the current record. memberMapData MemberMapData The CsvHelper.Configuration.MemberMapData for the member being created. Returns object The object created from the string."
  },
  "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.html": {
    "href": "api/DataLayer.Implementations.StarLustMessierCsvRepository.StarMap.html",
    "title": "Class StarLustMessierCsvRepository.StarMap | Stargazer Data API",
    "summary": "Class StarLustMessierCsvRepository.StarMap Namespace DataLayer.Implementations Assembly DataLayer.dll A class internal to the StarLustMessierCsvRepository to map the csv columns to EquatorialMessierObject objects. private class StarLustMessierCsvRepository.StarMap : ClassMap<EquatorialMessierObject> Inheritance object ClassMap ClassMap<EquatorialMessierObject> StarLustMessierCsvRepository.StarMap Inherited Members ClassMap<EquatorialMessierObject>.Map<TMember>(Expression<Func<EquatorialMessierObject, TMember>>, bool) ClassMap<EquatorialMessierObject>.Map<T>(Expression<Func<T, object>>, bool) ClassMap<EquatorialMessierObject>.References<TClassMap>(Expression<Func<EquatorialMessierObject, object>>, params object[]) ClassMap.Map(Type, MemberInfo, bool) ClassMap.Map() ClassMap.References(Type, MemberInfo, params object[]) ClassMap.Parameter(string) ClassMap.Parameter(Func<ConstructorInfo>, string) ClassMap.Parameter(ConstructorInfo, ParameterInfo) ClassMap.AutoMap(CultureInfo) ClassMap.AutoMap(CsvConfiguration) ClassMap.AutoMap(CsvContext) ClassMap.GetMaxIndex(bool) ClassMap.ReIndex(int) ClassMap.AutoMapMembers(ClassMap, CsvContext, LinkedList<Type>, int) ClassMap.AutoMapConstructorParameters(ClassMap, CsvContext, LinkedList<Type>, int) ClassMap.CheckForCircularReference(Type, LinkedList<Type>) ClassMap.GetGenericType() ClassMap.ApplyAttributes(ParameterMap) ClassMap.ApplyAttributes(ParameterReferenceMap) ClassMap.ApplyAttributes(MemberMap) ClassMap.ApplyAttributes(MemberReferenceMap) ClassMap.ClassType ClassMap.ParameterMaps ClassMap.MemberMaps ClassMap.ReferenceMaps object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StarMap() Creates the object and maps all the columns public StarMap()"
  },
  "api/DataLayer.Implementations.StarLustMessierCsvRepository.html": {
    "href": "api/DataLayer.Implementations.StarLustMessierCsvRepository.html",
    "title": "Class StarLustMessierCsvRepository | Stargazer Data API",
    "summary": "Class StarLustMessierCsvRepository Namespace DataLayer.Implementations Assembly DataLayer.dll Handles retrieving data from the csv listing of Messier Deep Space Objects retrieved from Starlust.org internal class StarLustMessierCsvRepository : IMessierRepository Inheritance object StarLustMessierCsvRepository Implements IMessierRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StarLustMessierCsvRepository(string) Creates a new object. public StarLustMessierCsvRepository(string repositoryPath) Parameters repositoryPath string The path to the directory containing the file. Fields filePath The path to the repository file. private readonly string filePath Field Value string Methods GetRawMessierObjectsAsync() Asynchronously retrieves an IList<T> from the repository. public Task<IEnumerable<EquatorialMessierObject>> GetRawMessierObjectsAsync() Returns Task<IEnumerable<EquatorialMessierObject>> A running task that results in Exceptions FileNotFoundException If the csv file is not present in the directory"
  },
  "api/DataLayer.Implementations.StellariumJsonConstellationRepository.ConstellationName.html": {
    "href": "api/DataLayer.Implementations.StellariumJsonConstellationRepository.ConstellationName.html",
    "title": "Class StellariumJsonConstellationRepository.ConstellationName | Stargazer Data API",
    "summary": "Class StellariumJsonConstellationRepository.ConstellationName Namespace DataLayer.Implementations Assembly DataLayer.dll StellariumJsonConstellationRepository internal class to instantiate the constellation name from the Json repository private class StellariumJsonConstellationRepository.ConstellationName Inheritance object StellariumJsonConstellationRepository.ConstellationName Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties English [JsonProperty(\"english\")] public string? English { get; set; } Property Value string Native [JsonProperty(\"native\")] public string? Native { get; set; } Property Value string"
  },
  "api/DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.html": {
    "href": "api/DataLayer.Implementations.StellariumJsonConstellationRepository.JsonConstellationListConverter.html",
    "title": "Class StellariumJsonConstellationRepository.JsonConstellationListConverter | Stargazer Data API",
    "summary": "Class StellariumJsonConstellationRepository.JsonConstellationListConverter Namespace DataLayer.Implementations Assembly DataLayer.dll Custom Newtonsoft.Json.JsonConverter<T> used to build out the Constellation graph during retrieval from the repository private class StellariumJsonConstellationRepository.JsonConstellationListConverter : JsonConverter<IList<Constellation>> Inheritance object JsonConverter JsonConverter<IList<Constellation>> StellariumJsonConstellationRepository.JsonConstellationListConverter Inherited Members JsonConverter<IList<Constellation>>.WriteJson(JsonWriter, object, JsonSerializer) JsonConverter<IList<Constellation>>.ReadJson(JsonReader, Type, object, JsonSerializer) JsonConverter<IList<Constellation>>.CanConvert(Type) JsonConverter.CanRead JsonConverter.CanWrite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildLines(JArray, IList<Tuple<int, int>>) Inserts the edges from the Constellation graph into memory private static IEnumerable<Tuple<int, int>> BuildLines(JArray jArray, IList<Tuple<int, int>> lines) Parameters jArray JArray The array of objects retrieved from the repository (nested) lines IList<Tuple<int, int>> The table to insert the graph edges Returns IEnumerable<Tuple<int, int>> A list of all graph edges ReadJson(JsonReader, Type, IList<Constellation>?, bool, JsonSerializer) Reads the JSON representation of the object. public override IList<Constellation>? ReadJson(JsonReader reader, Type objectType, IList<Constellation>? existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters reader JsonReader The Newtonsoft.Json.JsonReader to read from. objectType Type Type of the object. existingValue IList<Constellation> The existing value of object being read. If there is no existing value then null will be used. hasExistingValue bool The existing value has a value. serializer JsonSerializer The calling serializer. Returns IList<Constellation> The object value. WriteJson(JsonWriter, IList<Constellation>?, JsonSerializer) Writes the JSON representation of the object. public override void WriteJson(JsonWriter writer, IList<Constellation>? value, JsonSerializer serializer) Parameters writer JsonWriter The Newtonsoft.Json.JsonWriter to write to. value IList<Constellation> The value. serializer JsonSerializer The calling serializer."
  },
  "api/DataLayer.Implementations.StellariumJsonConstellationRepository.html": {
    "href": "api/DataLayer.Implementations.StellariumJsonConstellationRepository.html",
    "title": "Class StellariumJsonConstellationRepository | Stargazer Data API",
    "summary": "Class StellariumJsonConstellationRepository Namespace DataLayer.Implementations Assembly DataLayer.dll Used to retrieve constellation data from the Stellarium Json file. internal class StellariumJsonConstellationRepository : IConstellationRepository Inheritance object StellariumJsonConstellationRepository Implements IConstellationRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StellariumJsonConstellationRepository(string) Creates a new instance of the repository public StellariumJsonConstellationRepository(string repositoryPath) Parameters repositoryPath string The path to the directory containing the Json file. Fields filePath The path to the Stellarium Json file to read from private readonly string filePath Field Value string Explicit Interface Implementations IConstellationRepository.GetAllConstellationsAsync() Asynchronously retrieves a IList<T> from the Json file. Task<IList<Constellation>> IConstellationRepository.GetAllConstellationsAsync() Returns Task<IList<Constellation>> An IList<T> Exceptions FileNotFoundException"
  },
  "api/DataLayer.Implementations.html": {
    "href": "api/DataLayer.Implementations.html",
    "title": "Namespace DataLayer.Implementations | Stargazer Data API",
    "summary": "Namespace DataLayer.Implementations Classes CosineKittyEquatorialConverter<T> Converts an object of type EquatorialCelestialBody from the equatorial coordinate system to horizontal coordinates using the CosineKitty.AstronomyEngine library HygCsvStarRepository Retrieves raw star data from the HYG.csv repository HygCsvStarRepository.StarMap A custom class (internal to the HygStarRepository) to map the columns in the repository to the POCO HygCsvStarRepository.StarMap.ParsecToLightyearConverter A custom type converter to convert parsecs to light years (the distance data in the repository is in Parsecs... yes... that's actually a real thing). NullableDoubleConverter A custom type converter to handle blank space in the csv file NullableIntConverter A custom type converter to handle blank space in the repository StarLustMessierCsvRepository Handles retrieving data from the csv listing of Messier Deep Space Objects retrieved from Starlust.org StarLustMessierCsvRepository.StarMap A class internal to the StarLustMessierCsvRepository to map the csv columns to EquatorialMessierObject objects. StarLustMessierCsvRepository.StarMap.DdmToDecimalDegreesConverter A type converter internal to the StarLustMessierCsvRepository class used to convert the Declination from degrees and minutes to decimal degrees. StarLustMessierCsvRepository.StarMap.HmsToDecimalDegreesConverter A type converter internal to the StarLustMessierCsvRepository class used to convert the Right Ascension from hours and decimal minutes to decimal hours. StellariumJsonConstellationRepository Used to retrieve constellation data from the Stellarium Json file. StellariumJsonConstellationRepository.ConstellationName StellariumJsonConstellationRepository internal class to instantiate the constellation name from the Json repository StellariumJsonConstellationRepository.JsonConstellationListConverter Custom Newtonsoft.Json.JsonConverter<T> used to build out the Constellation graph during retrieval from the repository"
  },
  "api/DataLayer.InjectionService-1.html": {
    "href": "api/DataLayer.InjectionService-1.html",
    "title": "Class InjectionService<T> | Stargazer Data API",
    "summary": "Class InjectionService<T> Namespace DataLayer Assembly DataLayer.dll Used to provide dependency injection to instantiate interface and abstract objects and provide dependencies to constructors. Registers all classes to be injected into constructors to avoid hard coding into descendant classes. public static class InjectionService<T> Type Parameters T The class that instantiates the star in the front end. Inheritance object InjectionService<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields maxStarMagnitude private const int maxStarMagnitude = 6 Field Value int Methods GetRepositoryServiceAsync(string) Used to asynchronously instantiate the repository service. This should be called in an async method using the await keyword. public static Task<StargazerRepositoryService<T>> GetRepositoryServiceAsync(string baseDirectoryPath) Parameters baseDirectoryPath string The base path of the executing application. (Used to find the location of the repositories in DataLayer/Repositories) Returns Task<StargazerRepositoryService<T>> A new StargazerRepositoryService instance. Exceptions DirectoryNotFoundException If the base directory of the executing program cannot be found."
  },
  "api/DataLayer.Interfaces.IConstellationRepository.html": {
    "href": "api/DataLayer.Interfaces.IConstellationRepository.html",
    "title": "Interface IConstellationRepository | Stargazer Data API",
    "summary": "Interface IConstellationRepository Namespace DataLayer.Interfaces Assembly DataLayer.dll Used to retrive a collection of Constellation from a repository. public interface IConstellationRepository Methods GetAllConstellationsAsync() Gets all Constellations from the repository Task<IList<Constellation>?> GetAllConstellationsAsync() Returns Task<IList<Constellation>> A running task that can be awaited"
  },
  "api/DataLayer.Interfaces.IEquatorialConverter-1.html": {
    "href": "api/DataLayer.Interfaces.IEquatorialConverter-1.html",
    "title": "Interface IEquatorialConverter<T> | Stargazer Data API",
    "summary": "Interface IEquatorialConverter<T> Namespace DataLayer.Interfaces Assembly DataLayer.dll Converts a HorizontalBody to a {T} object public interface IEquatorialConverter<T> where T : HorizontalBody, new() Type Parameters T The converted value of type {T} (defined by the front end) Properties Convert A function accepting an object of type EquatorialCelestialBody to type {T} Func<EquatorialCelestialBody, T> Convert { get; } Property Value Func<EquatorialCelestialBody, T>"
  },
  "api/DataLayer.Interfaces.IMessierRepository.html": {
    "href": "api/DataLayer.Interfaces.IMessierRepository.html",
    "title": "Interface IMessierRepository | Stargazer Data API",
    "summary": "Interface IMessierRepository Namespace DataLayer.Interfaces Assembly DataLayer.dll Retrieves a list of Messier Deep Space Objects from a repository public interface IMessierRepository Methods GetRawMessierObjectsAsync() Gets all Messier Objects from the repository Task<IEnumerable<EquatorialMessierObject>> GetRawMessierObjectsAsync() Returns Task<IEnumerable<EquatorialMessierObject>> A running task that can be awaited."
  },
  "api/DataLayer.Interfaces.IStarRepository.html": {
    "href": "api/DataLayer.Interfaces.IStarRepository.html",
    "title": "Interface IStarRepository | Stargazer Data API",
    "summary": "Interface IStarRepository Namespace DataLayer.Interfaces Assembly DataLayer.dll Communicates with a repository of Yale Stars (in the equatorial coordinate form). public interface IStarRepository Methods GetAllStarsAsync(double) Gets all stars that are brighter than a certain magnitude. Task<IList<EquatorialStar>> GetAllStarsAsync(double maximumMagnitude) Parameters maximumMagnitude double The minimum brightness to include (negative numbers are brighter) Returns Task<IList<EquatorialStar>> A running task that can be awaited to obtain a list of stars GetStarByHipAsync(int) Gets a single star from the repository Task<EquatorialStar?> GetStarByHipAsync(int hipparcosId) Parameters hipparcosId int The Hipparcos ID of the star to find Returns Task<EquatorialStar> Null if no star is found"
  },
  "api/DataLayer.Interfaces.html": {
    "href": "api/DataLayer.Interfaces.html",
    "title": "Namespace DataLayer.Interfaces | Stargazer Data API",
    "summary": "Namespace DataLayer.Interfaces Interfaces IConstellationRepository Used to retrive a collection of Constellation from a repository. IEquatorialConverter<T> Converts a HorizontalBody to a {T} object IMessierRepository Retrieves a list of Messier Deep Space Objects from a repository IStarRepository Communicates with a repository of Yale Stars (in the equatorial coordinate form)."
  },
  "api/DataLayer.StargazerRepositoryService-1.html": {
    "href": "api/DataLayer.StargazerRepositoryService-1.html",
    "title": "Class StargazerRepositoryService<T> | Stargazer Data API",
    "summary": "Class StargazerRepositoryService<T> Namespace DataLayer Assembly DataLayer.dll Used to make requests to convert data from the equatorial coordinate system to the horizontal coordinate system and receive a data package containing all values. public class StargazerRepositoryService<T> Type Parameters T The class type of the star to be drawn by the front end. This is needed for the internal logic of the CelestialDataPackage<T> Inheritance object StargazerRepositoryService<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StargazerRepositoryService(IEnumerable<EquatorialStar>, IEnumerable<Constellation>, IReadOnlyDictionary<int, EquatorialStar>, IEnumerable<EquatorialMessierObject>) Used by the CreateAsync(IStarRepository, IConstellationRepository, IMessierRepository) method to initialize a new service private StargazerRepositoryService(IEnumerable<EquatorialStar> equatorialStars, IEnumerable<Constellation> equatorialConstellations, IReadOnlyDictionary<int, EquatorialStar> equatorialConstellationStars, IEnumerable<EquatorialMessierObject> equatorialMessierObjects) Parameters equatorialStars IEnumerable<EquatorialStar> The stars retrieved from the repository equatorialConstellations IEnumerable<Constellation> The constellations retrieved from the repository equatorialConstellationStars IReadOnlyDictionary<int, EquatorialStar> The stars retrieved from the repository that are part of constellations equatorialMessierObjects IEnumerable<EquatorialMessierObject> The Messier Deep Space Objects retrieved from the repository Fields constellations Immutable collection of all constellations retrieved during initialization. private readonly IEnumerable<Constellation> constellations Field Value IEnumerable<Constellation> equatorialConstellationStars Immutable dictionary of all stars that are part of known constellations (no repeats, the HipparcosId is used as the key) private readonly IReadOnlyDictionary<int, EquatorialStar> equatorialConstellationStars Field Value IReadOnlyDictionary<int, EquatorialStar> equatorialMessierObjects Immutable collection of all Messier Deep Space Objects retrieved during initialization. private readonly IEnumerable<EquatorialMessierObject> equatorialMessierObjects Field Value IEnumerable<EquatorialMessierObject> equatorialStars Immutable in-memory collection of all stars that were retrieved during initialization (excluding stars in constellations) private readonly IEnumerable<EquatorialStar> equatorialStars Field Value IEnumerable<EquatorialStar> horizontalMessierObjects Producer-consumer collection of converted HorizontalMessierObjects passed to the graphical layer private readonly BlockingCollection<HorizontalMessierObject> horizontalMessierObjects Field Value BlockingCollection<HorizontalMessierObject> horizontalStars Producer-consumer collection of HorizontalStars passed to the graphical layer private readonly BlockingCollection<HorizontalStar> horizontalStars Field Value BlockingCollection<HorizontalStar> maxStarMagnitude Used to filter the maximum magnitude of stars retrieved from the Yale Star repository private const double maxStarMagnitude = 6 Field Value double Properties constellationStars Dictionary of HorizontalStars contained in constellations private ConcurrentDictionary<int, HorizontalStar> constellationStars { get; } Property Value ConcurrentDictionary<int, HorizontalStar> Methods CreateAsync(IStarRepository, IConstellationRepository, IMessierRepository) Asynchronously creates a new instance of StargazerRepositoryService public static Task<StargazerRepositoryService<T>> CreateAsync(IStarRepository starRepository, IConstellationRepository constellationRepository, IMessierRepository messierRepository) Parameters starRepository IStarRepository Used to access a repository of Yale Stars constellationRepository IConstellationRepository Used to access a repository of constellations identified by the HIP ID messierRepository IMessierRepository Used to access a repository of Messier Deep Space Objects Returns Task<StargazerRepositoryService<T>> A new StargazerRepositoryService object. GatherConstellationStars(Task<IList<EquatorialStar>>, Task<IList<Constellation>>, IStarRepository) Gathers all stars that are a part of constellations into a separate dictionary using the HipparcosId as the key. This is because the Hip ID is used by the constellations to list the nodes of the constellation graph. Removes the stars from the master listing. private static Task<IDictionary<int, EquatorialStar>> GatherConstellationStars(Task<IList<EquatorialStar>> starTask, Task<IList<Constellation>> constellationTask, IStarRepository starRepository) Parameters starTask Task<IList<EquatorialStar>> The star repository retrieval task constellationTask Task<IList<Constellation>> The constellation repository retrieval task starRepository IStarRepository The star repository so that constellation stars that were filtered out can be retrieved by HipparcosId Returns Task<IDictionary<int, EquatorialStar>> The dictionary of constellation stars Exceptions InvalidOperationException If a constellation star cannot be found. UpdateUserPosition(double, double, DateTime) Makes an async call to convert all data from Equatorial to Horizontal coordinates based on supplied user data. public Task<CelestialDataPackage<T>> UpdateUserPosition(double latitude, double longitude, DateTime localUserTime) Parameters latitude double The latitude of the observer (-90 <= value <= 90) longitude double The longitude of the observer (-90 <= value <= 90) localUserTime DateTime The observer time in Universal TimeCode new DateTime(year, month, day, hour, min, sec).ToUniversalTime() Returns Task<CelestialDataPackage<T>> A package containing all data required for display. (This call should be made in an async method using the await keyword)"
  },
  "api/DataLayer.html": {
    "href": "api/DataLayer.html",
    "title": "Namespace DataLayer | Stargazer Data API",
    "summary": "Namespace DataLayer Classes CelestialDataPackage<T> Encapsulates all data returned in the Horizontal Coordinate system from the DataLayer needed by the front end to display astronomical objects. InjectionService<T> Used to provide dependency injection to instantiate interface and abstract objects and provide dependencies to constructors. Registers all classes to be injected into constructors to avoid hard coding into descendant classes. StargazerRepositoryService<T> Used to make requests to convert data from the equatorial coordinate system to the horizontal coordinate system and receive a data package containing all values."
  },
  "api/GodotPlugins.Game.Main.html": {
    "href": "api/GodotPlugins.Game.Main.html",
    "title": "Class Main | Stargazer Data API",
    "summary": "Class Main Namespace GodotPlugins.Game Assembly New Game Project.dll internal static class Main Inheritance object Main Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InitializeFromGameProject(IntPtr, IntPtr, IntPtr, int) private static godot_bool InitializeFromGameProject(IntPtr godotDllHandle, IntPtr outManagedCallbacks, IntPtr unmanagedCallbacks, int unmanagedCallbacksSize) Parameters godotDllHandle IntPtr outManagedCallbacks IntPtr unmanagedCallbacks IntPtr unmanagedCallbacksSize int Returns godot_bool"
  },
  "api/GodotPlugins.Game.html": {
    "href": "api/GodotPlugins.Game.html",
    "title": "Namespace GodotPlugins.Game | Stargazer Data API",
    "summary": "Namespace GodotPlugins.Game Classes Main"
  },
  "api/Microsoft.CodeAnalysis.EmbeddedAttribute.html": {
    "href": "api/Microsoft.CodeAnalysis.EmbeddedAttribute.html",
    "title": "Class EmbeddedAttribute | Stargazer Data API",
    "summary": "Class EmbeddedAttribute Namespace Microsoft.CodeAnalysis Assembly DataLayer.dll [Embedded] internal sealed class EmbeddedAttribute : Attribute Inheritance object Attribute EmbeddedAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors EmbeddedAttribute() public EmbeddedAttribute()"
  },
  "api/Microsoft.CodeAnalysis.html": {
    "href": "api/Microsoft.CodeAnalysis.html",
    "title": "Namespace Microsoft.CodeAnalysis | Stargazer Data API",
    "summary": "Namespace Microsoft.CodeAnalysis Classes EmbeddedAttribute"
  },
  "api/System.Runtime.CompilerServices.NullableAttribute.html": {
    "href": "api/System.Runtime.CompilerServices.NullableAttribute.html",
    "title": "Class NullableAttribute | Stargazer Data API",
    "summary": "Class NullableAttribute Namespace System.Runtime.CompilerServices Assembly DataLayer.dll [Embedded] [AttributeUsage(AttributeTargets.Class|AttributeTargets.Property|AttributeTargets.Field|AttributeTargets.Event|AttributeTargets.Parameter|AttributeTargets.ReturnValue|AttributeTargets.GenericParameter, AllowMultiple = false, Inherited = false)] internal sealed class NullableAttribute : Attribute Inheritance object Attribute NullableAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors NullableAttribute(byte) public NullableAttribute(byte value) Parameters value byte NullableAttribute(byte[]) public NullableAttribute(byte[] value) Parameters value byte[] Fields NullableFlags public readonly byte[] NullableFlags Field Value byte[]"
  },
  "api/System.Runtime.CompilerServices.NullableContextAttribute.html": {
    "href": "api/System.Runtime.CompilerServices.NullableContextAttribute.html",
    "title": "Class NullableContextAttribute | Stargazer Data API",
    "summary": "Class NullableContextAttribute Namespace System.Runtime.CompilerServices Assembly DataLayer.dll [Embedded] [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Method|AttributeTargets.Interface|AttributeTargets.Delegate, AllowMultiple = false, Inherited = false)] internal sealed class NullableContextAttribute : Attribute Inheritance object Attribute NullableContextAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors NullableContextAttribute(byte) public NullableContextAttribute(byte value) Parameters value byte Fields Flag public readonly byte Flag Field Value byte"
  },
  "api/System.Runtime.CompilerServices.html": {
    "href": "api/System.Runtime.CompilerServices.html",
    "title": "Namespace System.Runtime.CompilerServices | Stargazer Data API",
    "summary": "Namespace System.Runtime.CompilerServices Classes NullableAttribute NullableContextAttribute"
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | Stargazer Data API",
    "summary": "Getting Started To use DataLayer, call: InjectionService.Get"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Stargazer Data API",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | Stargazer Data API",
    "summary": "Introduction This API describes how to use the DataLayer of the Stargazer application. Initially, all methods required to use the service will be provided. Eventually, all internal logic will be documented as well."
  }
}